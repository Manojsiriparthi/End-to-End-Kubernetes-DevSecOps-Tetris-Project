{"ast":null,"code":"import{createState}from\"./State.js\";const createTetris=function(){let{height,width}=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{height:20,width:10};const _height=height;const _width=width;const state=createState(_height,_width);let timer=null;const stateChangeListeners=[];state.onLevelChange(level=>startTimer(timer,calculateSpeedForCurrentLevel(level)));const startTimer=(timer,delay)=>{if(timer!=null){clearInterval(timer);}const newTimer=setInterval(tick,delay);return newTimer;};const stopTimer=timer=>{if(timer!=null){clearInterval(timer);}};const calculateSpeedForCurrentLevel=level=>{return Math.floor(900*Math.pow(0.9,level-1));};//eslint-disable-next-line no-unused-vars\nconst toString=()=>{let str=state.visibleMatrix().map(row=>{return row.map(tetromino=>{if(tetromino.isFilled()){return tetromino.color;}else{return tetromino.state;}}).join(\",\");}).join(\"\\n\");return str;};const tick=()=>{if(!state.isRunning()){return;}state.moveCurrentPieceDown();if(state.isGameOver()){stopTimer(timer);}notifyOnStateChangeListeners();};const notifyOnStateChangeListeners=()=>{stateChangeListeners.forEach(fn=>fn({...state}));};const resume=()=>{state.resume();notifyOnStateChangeListeners();timer=startTimer(timer,calculateSpeedForCurrentLevel(state.level()));};const start=()=>{if(state.isStarted()){return;}state.start();notifyOnStateChangeListeners();timer=startTimer(timer,calculateSpeedForCurrentLevel(state.level()));};const pause=()=>{if(state.isPaused()){return;}if(timer!=null){clearInterval(timer);}state.pause();stopTimer(timer);notifyOnStateChangeListeners();};const isPaused=()=>{return state.isPaused();};const moveLeft=()=>{state.moveLeft();notifyOnStateChangeListeners();};const moveRight=()=>{state.moveRight();notifyOnStateChangeListeners();};const rotateCurrentPiece=()=>{state.rotateCurrentPiece();notifyOnStateChangeListeners();};return{onStateChange(fn){stateChangeListeners.push(fn);},isGameOver(){return state.gameOver;},isRunning(){return state.isRunning();},isStarted(){return state.isStarted();},state,rotateCurrentPiece,moveLeft,moveRight,start,pause,isPaused,resume,tick,height:_height,width:_width};};export{createTetris};","map":{"version":3,"names":["createState","createTetris","height","width","arguments","length","undefined","_height","_width","state","timer","stateChangeListeners","onLevelChange","level","startTimer","calculateSpeedForCurrentLevel","delay","clearInterval","newTimer","setInterval","tick","stopTimer","Math","floor","pow","toString","str","visibleMatrix","map","row","tetromino","isFilled","color","join","isRunning","moveCurrentPieceDown","isGameOver","notifyOnStateChangeListeners","forEach","fn","resume","start","isStarted","pause","isPaused","moveLeft","moveRight","rotateCurrentPiece","onStateChange","push","gameOver"],"sources":["/root/End-to-End-Kubernetes-DevSecOps-Tetris-Project/Tetris-V1/src/tetris/Tetris.js"],"sourcesContent":["import {createState} from \"./State.js\";\n\n\nconst createTetris = ({height, width} = {height: 20, width:10}) => {\n    const _height = height;\n    const _width = width;\n    const state = createState(_height, _width);\n    let timer = null;\n    const stateChangeListeners = [];\n\n    state.onLevelChange((level) => startTimer(timer, calculateSpeedForCurrentLevel(level)))\n\n    const startTimer = (timer, delay) => {\n        if (timer != null) {\n            clearInterval(timer);\n        }\n\n        const newTimer = setInterval(tick, delay)\n        return newTimer;\n    };\n\n    const stopTimer = (timer) => {\n        if (timer != null) {\n            clearInterval(timer);\n        }\n    };\n\n    const calculateSpeedForCurrentLevel = (level) => {\n        return Math.floor(900 * (Math.pow(0.9, level - 1)));\n    };\n\n\n    //eslint-disable-next-line no-unused-vars\n    const toString = () => {\n        let str = state.visibleMatrix().map(row => {\n            return row.map(tetromino => {\n                if (tetromino.isFilled()) {\n                    return tetromino.color;\n                } else {\n                    return tetromino.state;\n                }\n            }).join(\",\");\n        }).join(\"\\n\");\n\n        return str;\n    };\n\n    const tick = () => {\n        if (!state.isRunning()) {\n            return;\n        }\n\n        state.moveCurrentPieceDown();\n        if(state.isGameOver()){\n            stopTimer(timer);\n        }\n        notifyOnStateChangeListeners();\n    };\n\n    const notifyOnStateChangeListeners = () => {\n        stateChangeListeners.forEach(fn => fn({...state}));\n    };\n\n    const resume = () => {\n        state.resume();\n        notifyOnStateChangeListeners();\n        timer = startTimer(timer, calculateSpeedForCurrentLevel(state.level()));\n\n    };\n\n    const start = () => {\n        if (state.isStarted()) {\n            return;\n        }\n        state.start();\n        notifyOnStateChangeListeners();\n        timer = startTimer(timer, calculateSpeedForCurrentLevel(state.level()));\n    };\n\n    const pause = () => {\n        if (state.isPaused()) {\n            return;\n        }\n        if (timer != null) {\n            clearInterval(timer);\n        }\n        state.pause();\n        stopTimer(timer);\n        notifyOnStateChangeListeners();\n    };\n\n    const isPaused = () => {\n        return state.isPaused();\n    }\n\n    const moveLeft = () => {\n        state.moveLeft();\n        notifyOnStateChangeListeners();\n    };\n\n    const moveRight = () => {\n        state.moveRight();\n        notifyOnStateChangeListeners();\n    }\n\n    const rotateCurrentPiece = () => {\n        state.rotateCurrentPiece();\n        notifyOnStateChangeListeners();\n    }\n\n\n\n    return {\n        onStateChange(fn) {\n            stateChangeListeners.push(fn);\n        },\n    \n        isGameOver()  {\n            return state.gameOver;\n        },\n    \n        isRunning() {\n            return state.isRunning();\n        },\n    \n        isStarted() {\n            return state.isStarted();\n        },\n        state,\n        rotateCurrentPiece,\n        moveLeft,\n        moveRight,\n        start,\n        pause,\n        isPaused,\n        resume,\n        tick,\n        height: _height,\n        width: _width\n    };\n\n};\n\nexport {createTetris}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}